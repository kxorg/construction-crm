version: '3.9'


networks:
  cc-network:
    name: cc-network
    driver: bridge

services:
  app: &app
    build:
      context: .
      dockerfile: compose/local.Dockerfile
    container_name: cc_app_local
    command: /start
    restart: always
    env_file:
      - local.env
    volumes:
      - ./app:/opt/cc/
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - cc-network

  postgres:
    image: postgres:13-alpine
    container_name: cc_postgres_local
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - local.env
    environment:
      - TZ=Europe/Moscow
    ports:
      - "5432:5432"
    networks:
      - cc-network


  redis:
    image: valkey/valkey:7.2.5-alpine3.19
    container_name: cc_redis_local
    restart: always
    networks:
      - cc-network
    volumes:
      - redis_data:/data


  celery_worker:
    <<: *app
    container_name: cc_celery_worker_local
    restart: always
    env_file:
      - local.env
    volumes:
      - ./app:/opt/cc/
    ports: [ ]
    command: /start-celeryworker
    networks:
      - cc-network
    depends_on:
      - redis

  celery_beat:
    <<: *app
    container_name: cc_celery_beat_local
    restart: always
    env_file:
      - local.env
    volumes:
      - ./app:/opt/cc/
    ports: [ ]
    command: /start-celerybeat
    networks:
      - cc-network
    depends_on:
      - redis

  flower:
    <<: *app
    container_name: cc_flower_local
    command: /start-flower
    restart: always
    env_file:
      - local.env
    ports:
      - "5555:5555"
    networks:
      - cc-network
    depends_on:
      - celery_worker
      - celery_beat
      - redis

volumes:
  postgres_data: {}
  redis_data: {}
